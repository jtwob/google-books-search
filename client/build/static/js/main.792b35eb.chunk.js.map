{"version":3,"sources":["Components/ResultCard/ResultCard.js","Pages/Search.js","Components/SavedCard/SavedCard.js","Pages/Saved.js","Components/Nav/Nav.js","App.js","registerServiceWorker.js","index.js"],"names":["ResultCard","props","saveBook","a","bookObj","title","authors","description","image","link","axios","post","className","map","author","style","textAlign","target","marginRight","href","onClick","e","preventDefault","src","alt","width","float","margin","Search","useState","term","search","setsearch","data","results","setresults","onSubmitHandler","query","trim","replace","console","log","get","books","items","onSubmit","onChange","value","type","name","backgroundColor","result","justifyContent","volumeInfo","imageLinks","thumbnail","infoLink","SavedCard","deleteBook","delete","id","Saved","saved","setbooks","fetchSaved","useEffect","book","_id","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.792b35eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ResultCard = (props) => {\r\n  const saveBook = async function () {\r\n    const bookObj = {\r\n      title: props.title,\r\n      authors: props.authors,\r\n      description: props.description,\r\n      image: props.image,\r\n      link: props.link,\r\n    };\r\n\r\n    const newBook = await axios.post(\"/api/books\", bookObj);\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    e.preventDefault();\r\n    saveBook();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <h5 className=\"card-title\">{props.title}</h5>\r\n              {props.authors.map((author) => (\r\n                <p>{author}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"col-sm-9\" style={{ textAlign: \"right\" }}>\r\n              <a\r\n                target=\"_blank\"\r\n                style={{ marginRight: 5 + \"px\" }}\r\n                href={props.link}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View\r\n              </a>\r\n              <button onClick={onClick} className=\"btn btn-primary\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <img\r\n                className=\"card-img-top\"\r\n                src={props.image}\r\n                alt=\"Card image cap\"\r\n                style={{ width: 150 + \"px\", float: \"left\", margin: 10 + \"px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <p className=\"card-text\">{props.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultCard;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ResultCard from \"../Components/ResultCard/ResultCard\";\r\n\r\nconst Search = (props) => {\r\n  const [search, setsearch] = useState({ term: \"\" });\r\n  const [results, setresults] = useState({ data: [] });\r\n\r\n  const onChange = function (e) {\r\n    setsearch({ term: e.target.value });\r\n  };\r\n\r\n  const onSubmitHandler = async function (e) {\r\n    e.preventDefault();\r\n    var query = search.term.trim().replace(/  +/g, \"+\");\r\n    console.log(query);\r\n    const books = await axios.get(\r\n      `https://www.googleapis.com/books/v1/volumes?q=${query}`\r\n    );\r\n    setresults({ data: books.data.items });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h3>Search a Book</h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <form className=\"form-inline\" onSubmit={onSubmitHandler}>\r\n            <div className=\"form-row align-items-center\">\r\n              <input\r\n                className=\"form-control\"\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                name=\"book\"\r\n              />\r\n              <button className=\"btn\" type=\"submit\">\r\n                Find\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"container\" style={{ backgroundColor: \"lightgray\" }}>\r\n        <h3>Results</h3>\r\n        {results.data.map((result) => (\r\n          <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n            <ResultCard\r\n              title={result.volumeInfo.title}\r\n              authors={result.volumeInfo.authors}\r\n              description={\r\n                result.volumeInfo.description\r\n                  ? result.volumeInfo.description\r\n                  : \"No available description at this time.\"\r\n              }\r\n              image={result.volumeInfo.imageLinks.thumbnail}\r\n              link={result.volumeInfo.infoLink}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SavedCard = (props) => {\r\n  const deleteBook = async function () {\r\n    const book = await axios.delete(`/api/books/${props.id}`);\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    deleteBook();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <h5 className=\"card-title\">{props.title}</h5>\r\n              {props.authors.map((author) => (\r\n                <p>{author}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"col-sm-9\" style={{ textAlign: \"right\" }}>\r\n              <a\r\n                target=\"_blank\"\r\n                style={{ marginRight: 5 + \"px\" }}\r\n                href={props.link}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View\r\n              </a>\r\n              <button onClick={onClick} className=\"btn btn-primary\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <img\r\n                className=\"card-img-top\"\r\n                src={props.image}\r\n                alt=\"Card image cap\"\r\n                style={{ width: 150 + \"px\", float: \"left\", margin: 10 + \"px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <p className=\"card-text\">{props.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ResultCard from \"../Components/ResultCard/ResultCard\";\r\nimport SavedCard from \"../Components/SavedCard/SavedCard\";\r\n\r\nconst Saved = () => {\r\n  const [books, setbooks] = useState({ saved: [] });\r\n  const fetchSaved = async function () {\r\n    const books = await axios.get(\"/api/books\");\r\n    setbooks({ saved: books.data });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSaved();\r\n  }, [books]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {books.saved ? (\r\n        books.saved.map((book) => (\r\n          <SavedCard\r\n            title={book.title}\r\n            authors={book.authors}\r\n            description={book.description}\r\n            image={book.image}\r\n            link={book.link}\r\n            id={book._id}\r\n          />\r\n        ))\r\n      ) : (\r\n        <h1>No books saved yet... Head to the search page to add some.</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\n\r\nconst Nav = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Google Books\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/search\">\r\n              Search\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/saved\">\r\n              Saved\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Search from \"./Pages/Search\";\r\nimport Saved from \"./Pages/Saved\";\r\nimport Nav from \"./Components/Nav/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <Router>\r\n          <Nav />\r\n          <Switch>\r\n            <Route path=\"/search\" component={Search} />\r\n            <Route path=\"/saved\" component={Saved} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}